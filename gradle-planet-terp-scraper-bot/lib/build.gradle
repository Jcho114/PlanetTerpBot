/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1-rc-2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    
    // This dependency is used for the discord bot.
    implementation 'com.discord4j:discord4j-core:3.2.4'
    implementation 'io.projectreactor:reactor-test:3.5.4'
    
    // This dependency is used to access the dotenv file
    // Might remove later
    implementation 'io.github.cdimascio:dotenv-java:2.3.2'
    
    // This dependency is used for the SLF4j logger
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.slf4j:slf4j-simple:2.0.3'
    
    // This dependency is used for some random shit about io netty probably for network protocols
    runtimeOnly('io.netty:netty-resolver-dns-native-macos:4.1.90.Final:osx-aarch_64')
    
    // This dependency is used for web scraping
    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'org.htmlunit:htmlunit:3.0.0'
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}